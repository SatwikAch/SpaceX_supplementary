[["index.html", "Supplementary Materials for Gene Co-expression Network Estimation for Spatial Transcriptomics Introduction", " Supplementary Materials for Gene Co-expression Network Estimation for Spatial Transcriptomics Satwik Acharyya, Xiang Zhou, Veera Baladandayuthapani 2022-08-14 Introduction The spatial transcriptomics method depicts the positioning of a single cell on a spatially structured tissue. Knowledge about gene expressions and the spatial distribution of mRNA allows us to uncover cellular and subcellular heterogeneity in tissues, tumors, and immune cells. Spatial transcriptomics provides a unique opportunity to decipher both the cellular and subcellular architecture in both tissues and individual cells along with detection of gene co-expression patterns at both levels. These approaches are very insightful to study disease propagation in the field of embryology, oncology, and histology. The SpaceX method is a statistical tool to quantify spatially varying gene co-expression patterns in a tissue consists of different cell type based or sptailly contiguous clusters. This is a supplementary file of the paper named SpaceX: Gene Co-expression Network Estimation in Spatial Transcriptomics. The sectional contents of the supplementary file is mentioned below. We start with a detailed description of the methodology in section A. In section B, further details of simulation study have been discussed. Eploratory analysis and more findings of real data analysis have been laid out in section C. Finally, we discuss the detailed steps for implementation of the SpaceX package in section D. "],["method.html", "A Methodology A.1 SpaceX model A.2 Poisson Mixed Model A.3 Multi-Study Factor Model (MSFA) A.4 Multiplicative gamma shrinkage prior A.5 Novelty in Methodology and Estimation Procedure A.6 Modifiend version of the model for cell-type based clusters", " A Methodology In this section, we start with a brief discussion of the model and interpretations of each term of the model. Next, A detailed discussion of the estimation procedure for the SpaceX model in equation 1 in section 2 of the paper (also mentioned in equation (A.2) ) is provided. Finally we discuss the methodological novelty of our SpaceX method. A.1 SpaceX model The gene expression is modeled with a Poisson distribution as \\[\\begin{equation} y^{c}_{g}({\\bf s}_{i}) \\sim \\text{Poi}\\{ M^{c}({\\bf s}_{i}) \\lambda^{c}_{g}({\\bf s}_{i})\\}. \\tag{A.1} \\end{equation}\\] The interpretations of the notations in equation (A.1) remains same as mentioned in the section 2.2 of the paper. We denote \\(\\Lambda^{c}\\) as a \\(G \\times N_{c}\\) (\\(N_{c}\\) denotes size of the c-th cluster) matrix containing the rate parameters for all genes and c-th cluster. Subsequently, we model the cluster specific and spatially dependent rate parameter \\(\\bf \\Lambda^{c}\\) with an additive log-linear equation, i.e.  \\[\\begin{equation} \\text{log}({\\bf \\Lambda}^{c}) = {\\bf B}^{c}{\\bf X}^{c} + {\\bf S}^{c} + {\\bf \\Phi F} + {\\bf \\Psi^{c} D^{c}} + {\\boldsymbol{\\mathcal{E}}}^{c}. \\tag{A.2} \\end{equation}\\] We clearly mention the shared and cluster-specific parameters and their interpretations table A.1. Parameters Shared Cluster-specific Interpretations \\({\\bf B}^{c}{\\bf X}^{c}\\) \\(\\times\\) \\(\\checkmark\\) Covariate effect \\({\\bf S}^{c}\\) \\(\\times\\) \\(\\checkmark\\) Spatial information \\({\\bf \\Phi F}\\) \\(\\checkmark\\) \\(\\times\\) Shared loadings and factors \\(\\bf \\Psi^{c} D^{c}\\) \\(\\times\\) \\(\\checkmark\\) Cluster loadings and factors \\(\\boldsymbol{\\mathcal{E}}^{c}\\) \\(\\times\\) \\(\\checkmark\\) Error matrix Table A.1: Shared and cluster-specific parameters along with their corresponding interpretations. A full-scale MCMC will be computationally expensive on a complex hierarchical model. For computational advantage, we decompose the model into two parts (I) sPMM: spatial Poisson mixed model (S. Sun et al. 2018) and (II) MSFA: Multi-study factor analysis model (De Vito et al. 2021). We enable this model decomposition through a standard Gaussian random variable. A.2 Poisson Mixed Model We can break the SpaceX model (A.2) and write the spatial Poisson mixed model as \\[\\begin{align} \\begin{split} &amp; \\text{log}({\\boldsymbol \\lambda}^{c}_{g}) = {{\\bf X}^{c}}^{T} {\\boldsymbol \\beta}^{c}_{g} + {\\bf s}^{c} + {\\bf z}^{c}_{g}, \\\\ &amp; {\\boldsymbol \\lambda}^{c}_{g} = ( \\lambda^{c}_{1g}, \\dots , \\lambda^{c}_{N_{c}g} )^{T}, \\\\ &amp;{\\bf s}^{c} = ( s^{c}_{1}, \\dots , s^{c}_{N_{c}} )^{T} \\sim \\text{MVN}(0, \\sigma_{1}^{2}\\Omega^{c}(s)), \\\\ &amp;{\\bf z}^{c}_{g} = (z^{1}_{1g}, \\dots , z^{c}_{N_{c}g})^{T} \\sim \\text{MVN}(0, \\sigma_{2}^{2} I_{N_{c} \\times N_{c} }). \\end{split} \\tag{A.3} \\end{align}\\] Here \\(\\Omega^{c}(s_{1}, s_{2}) = \\text{exp} (- \\mid \\mid s_{1} - s_{2} \\mid \\mid^{2} / 2 \\rho^{2}_{c} ),\\) \\(c = 1, \\dots, C\\). We estimate the length scale parameter of spatial kernel \\(\\rho_{c}\\) based on the steps discussed in section 1 of supplementary information in S. Sun, Zhu, and Zhou (2020). Here \\(Z^{c}_{g}\\) captures the cluster specific latent gene expressions and a multi-variate hierarchical modeling of \\(Z^{c}_{g}(s_{i})\\) will help us to identify the gene co-expression network. A.3 Multi-Study Factor Model (MSFA) The 2nd stage of the modeling framework is multi-study factor analysis (De Vito et al. 2021) which is provided as follows \\[\\begin{align} \\begin{split} &amp; \\hat{\\bf z}^{c}_{i} = \\boldsymbol \\Phi {\\bf f}_{i} + \\boldsymbol \\Psi^{c} {\\bf d}^{c}_{i} + {\\bf e}^{c}_{i}, \\\\ &amp; {\\bf f}_{i} \\sim N_{K}(0, {\\bf I}_{K}), \\hspace{0.5cm} {\\bf d}^{c}_{i} \\sim N_{K_{c}}(0,{\\bf I}_{K_{c}}),\\\\ &amp; {\\bf e}^{c}_{i} \\sim N_{G}(0,\\boldsymbol \\Xi_{c}), \\hspace{0.5cm} \\boldsymbol \\Xi_{c} = \\text{diag}(\\xi^{c}_{1}, \\dots, \\xi^{c}_{G} ). \\end{split} \\tag{A.4} \\end{align}\\] The marginal distribution of \\(\\hat{\\bf z}^{c}_{i}\\) is a multivariate normal distribution with mean \\(0\\) and covariance matrix \\(\\Sigma_{c}\\) s.t. \\[\\begin{align} \\Sigma_{c} = \\Phi \\Phi^{T} + \\Psi^{c} {\\Psi^{c}}^{T} + \\Xi_{c} = \\Sigma_{\\Phi} + \\Sigma_{\\Psi^{c}} + \\Xi_{c} \\tag{A.5} \\end{align}\\] \\(\\Sigma_{\\Phi} = \\Phi \\Phi^{T}\\) and \\(\\Sigma_{\\Psi^{c}} = \\Psi^{c} {\\Psi^{c}}^{T}\\) are covariance of shared and cluster specific factors respectively. The decomposition of \\(\\Sigma_{c}\\) in (A.5) is not a unique since we can set \\(\\Phi^{*} = \\Phi Q\\) and \\({\\Psi^{*}}^{c} = \\Psi^{c} Q_{c}\\) where \\(Q\\) and \\(Q_{c}\\) are square orthonormal matrices. This will also lead to the same decomposition \\(\\Sigma^{c} = \\Phi^{*} {\\Phi^{*}}^{T} + {\\Psi^{*}}^{c} {{\\Psi^{*}}^{c}}^{T} = \\Phi \\Phi^{T} + \\Psi_{c} \\Psi_{c}^{T}\\). To overcome the indeterminacy through orthonormal matrices, the factor loading matrices are restricted to be lower triangular matrices (Geweke and Zhou 1996; Lopes and West 2004). A.4 Multiplicative gamma shrinkage prior We follow the same steps from De Vito et al. (2021) and place multiplicative gamma shrinkage prior (Bhattacharya and Dunson 2011) prior on the shared and cluster specific loading matrices i.e. \\(\\Phi\\) and \\(\\Psi_{c}\\) \\(c=1,\\dots,C\\). The shared and cluster specific latent factors (\\(K\\) and \\(K_{c}\\) respectively) are selected following methodology described in section 3.3 of De Vito et al. (2021). The multiplicative gamma prior on elements of shared covariance matrices are provided as follows \\[\\begin{equation} \\begin{split} &amp; \\phi_{gk} \\mid \\delta_{gk}, \\eta_{k} \\sim N(0, \\delta_{gk}^{-1} \\eta_{k}^{-1}), \\hspace{0.5cm} g = 1, \\dots , G, \\hspace{0.25cm} k = 1, \\dots, \\infty, \\\\ &amp; \\delta_{gk} \\sim \\Gamma(\\frac{\\nu}{2}, \\frac{\\nu}{2}) \\hspace{0.5cm} \\eta_{k} = \\prod_{j=1}^{k} \\zeta_{j} \\hspace{0.5cm} \\zeta_{1} \\sim \\Gamma(a_{1},1) \\hspace{0.5cm} \\zeta_{j} \\sim \\Gamma(a_{2},1), \\hspace{0.2cm} j \\ge 2. \\end{split} \\end{equation}\\] Here \\(\\delta_{gk}\\) is the local shrinkage parameter for \\(G\\) column elements of \\(k\\)th column and \\(\\eta_{k}\\) is the global shrinkage parameter where \\(\\zeta_{j}\\) \\((j=1,2. \\dots)\\) are independent. We repeat the same process to posit prior on the elements of cluster-specific loading matrices \\[\\begin{equation} \\begin{split} &amp; \\psi^{c}_{gk_{c}} \\mid \\delta^{c}_{gk_{c}}, \\eta^{c}_{k_{c}} \\sim N(0, {\\delta^{c^{-1}}_{gk_{c}}} {\\eta^{c^{-1}}_{k_{c}}}), \\hspace{0.5cm} g = 1, \\dots , G, \\hspace{0.2cm} k_{c} = 1, \\dots, \\infty \\hspace{0.2cm} \\text{and} \\hspace{0.2cm} c = 1, \\dots , C,\\\\ &amp; \\delta^{c}_{gk_{c}} \\sim \\Gamma(\\frac{\\nu^{c}}{2}, \\frac{\\nu^{c}}{2}) \\hspace{0.5cm} \\eta^{c}_{k_{c}} = \\prod_{j=1}^{k_{c}} \\zeta^{c}_{j} \\hspace{0.5cm} \\zeta^{c}_{1} \\sim \\Gamma(a^{c}_{1},1) \\hspace{0.5cm} \\zeta^{c}_{j} \\sim \\Gamma(a^{c}_{2},1), \\hspace{0.2cm} j \\ge 2. \\end{split} \\end{equation}\\] Here \\(\\delta^{c}_{gk_{c}}\\) \\(\\eta^{c}_{k_{c}}\\) are local and global parameters respectively and \\(\\zeta_{j}^{c}\\) \\((c=1,2, \\dots C)\\) are independent of each other. We determine \\(K\\) and \\(K_{c}\\) following methodology described in section 3.3 of De Vito et al. (2021). A.5 Novelty in Methodology and Estimation Procedure The SpaceX model (A.2) incorporates the spatial information in Poisson likelihood and builds on a factor model based components to estimate the gene co-expression networks. The PQLseq algorithm (S. Sun et al. 2018) is based on a Poisson likelihood but it does not incorporate the spatial information. The hierarchical factor analysis model (MSFA, De Vito et al. (2021)) model considers a Gaussian likelihood and does not take into account the spatial information. The SpaceX model incorporates the discrete nature of the single cell sequencing data and builds on a Poisson likelihood. The model accounts for the spatial effect whereas other two models do not. One can infer the gene co-expression networks while considering the spatial information but MSFA fails to incorporate the spatial locations. The detailed comparison between 3 models is summarized in Table A.2. An MCMC based algorithm for the SpaceX model will be computationally inefficient. We develop a tractable and computationally scalable Bayesian algorithm for the estimation procedure of the novel joint modeling framework. We decompose the whole model into two essential components (I) spatial Poisson model and (II) hierarchical factor analysis model. SpaceX model PQLseq MSFA Spatial information \\(\\checkmark\\) X X Poisson likelihood \\(\\checkmark\\) \\(\\checkmark\\) X Network inference \\(\\checkmark\\) X \\(\\checkmark\\) Gaussian likelihood X X \\(\\checkmark\\) Table A.2: Methodological comparison between SpaceX, PQLseq, MSFA models. A.5.1 Differences from individual methods (PQLseq, SPARK and MSFA) For spatial Poisson model, we use the scalable penalized quasi-likelihood algorithm named PQLseq. The algorithm is based on the generalized linear mixed model framework which accounts for the count nature of the single cell sequencing data. The algorithm can be used for detection of deferentially expressed genes. The PQLseq algorithm does not take into account the spatial information and the SPARK (S. Sun, Zhu, and Zhou 2020) method was developed to address this limitation. Although, the SPARK method only estimates parameters while setting the spatial variance parameter to zero and develops a score test based procedure to identify spatially expressed genes. We build on the PQLseq algorithm for our estimation procedure of spatial Poisson mixed model such that the algorithm can accommodate the spatial information and estimates the parameters without setting the spatial variance parameter to zero. We use the modified version of the PQLseq algorithm to obtain the latent gene expressions and carry it forward in our next framework. We use the multi-study factor analysis (MSFA) model (De Vito et al. 2021) on the latent gene expression matrix to estimate shared and cluster specific gene co-expressions. The MSFA model can not adapt for the count nature of the sequencing data and corresponding spatial locations. Our joint modeling framework in the SpaceX model addresses both concerns. A.6 Modifiend version of the model for cell-type based clusters We aimed to modify our model to explicitly accommodate the spatial correlation between cell-type based clusters. To do so, we follow the standard notations as discussed throughout the paer and Supplementary Materials. Here, \\(y^{c}_{g}(s_{i})\\) represents the gene expression for g-th gene for c-th cluster w.r.t. \\(s_{i}\\) spatial locations. The gene expression is being modeled with a Poisson distribution as where \\(M\\) is the normalizing constant and \\(\\lambda\\) is the rate parameter. The spatially dependent rate parameter \\(\\lambda\\) is modeled with a log-linear equation \\[\\begin{equation} \\text{log}({\\bf \\Lambda}^{c}) = {\\bf B}^{c}{\\bf X}^{c} + {\\bf S}^{c} + {\\bf \\Phi F} + {\\bf \\Gamma^{c}} {\\bf \\Psi^{c} D^{c}} + {\\boldsymbol{\\mathcal{E}}}^{c}. \\tag{A.6} \\end{equation}\\] Explanation of all the parameters except for the new parameter (\\(\\bf \\Gamma^{c}\\)) remains the same. In this model, \\(\\bf \\Gamma^{c}\\) now models the cell-type specific spatial process based on spatial distance between cell types. We adjust for spatial correlations for nearby cell-types through the term \\(\\bf S^{C}\\) and cross cell-type specific adjustment is factored in through \\(\\bf \\Gamma^{C}\\). While the extended model looks appealing, unfortunately, we realized that there are several levels of difficulties that need careful thinking before being fully incorporated in the model. For example, we are working with a Poisson likelihood which is non-Gaussian and spatial information needs to be included in the model. Identifiability issue is the main challenge for the model in (A.6). Based on factor models literature, the loading matrices are usually restricted to be a lower triangular matrix for identifiability reasons in case of a Gaussian likelihood (Geweke and Zhou 1996; Lopes and West 2004). We need non-standard identifiable restrictions to estimate \\(\\bf \\Gamma^{c}\\) and \\(\\bf \\Psi^{c}\\) since they are incorporated in the model in multiplicative manner. Given these methodological underpinnings that require more rigorous theoretical work to overcome such difficulties, we leave this non-trivial methodological estimation algorithm as future work. References "],["simulation.html", "B Simulation Study B.1 Induced Correlation Study B.2 Data generation with spatial correlation B.3 Data generation with no spatial correlation B.4 Hub gene detection based simulation", " B Simulation Study B.1 Induced Correlation Study In this section, we provide more details about the simulation study. First we consider \\(3\\) different values of \\(\\rho\\) \\((0.1,0.15,0.2)\\) and make a induced correlation plot by using the squared exponential spatial kernel. The plots are generented for all cell types and cell type specific cases. The vertical line denotes the value of induced correlation at the distance \\(0.01\\). For example the induced spatial correlations for all cell types (first Figure of B.1) w.r.t. \\(0.01\\) distance are \\(0.88\\), \\(0.80\\), \\(0.61\\) for \\(\\text S_{\\text High}\\) (\\(\\rho = 0.2\\)), \\(\\text S_{\\text Med}\\) (\\(\\rho = 0.15\\)), \\(\\text S_{\\text Low}\\) (\\(\\rho = 0.1\\)) methods respectively. Figure B.1: Induced correlation plot for the Merfish data Estimation of parameter \\(\\rho\\) : We adapt the steps from the section 1.1 of supplementary information of S. Sun, Zhu, and Zhou (2020) to estimate the length scale parameter of the spatial kernel \\(\\rho_{c}\\) based on several grid points. The estimation procedure of \\(\\rho_{c}\\) uses the pair-wise distances among spatial locations in the data to ensure scale-invariance. First the maximum \\((m_{1})\\) and minimum \\((m_{2})\\) value of those pairwise spatial distances are obtained. Next, equidistant \\(L\\) points are identified in the range from \\(\\text{log}(m_{1}/2)\\) to \\(\\text{log}(m_{2}*2)\\). In our case, we consider \\(L=10\\) as a default value for all our simulations and spatial transcriptomics data applications. We consider the middle value of those \\(10\\) grid points as the estimate of \\(\\rho_{c}\\). Table B.1 shows the true and estimated values of \\(\\rho_{c}\\) which shows the grid points based estimation procedure is effective. True value of \\(\\rho_{c}\\) 0.2 0.15 0.1 Estimated value of \\(\\rho_{c}\\) 0.18 0.16 0.11 Standard Errors 0.11 0.13 0.14 Table B.1: True, estimated values and standard errors of \\(\\rho_{c}\\). B.2 Data generation with spatial correlation Simulation Design: The details of the simulation design is provided in section 3 of the paper. Comparative Models: We discussed the \\(5\\) comparative models in section 3 of the paper. A summary of the comparative models is provided in Table B.2 SpaceX model Non-spatial Poisson model Gaussian model Spatial information \\(\\checkmark\\) X X Poisson likelihood \\(\\checkmark\\) \\(\\checkmark\\) X Gaussian likelihood X X \\(\\checkmark\\) Table B.2: Overview of comparative models. Metrics for comparison: To measure the co-expression estimation accuracy, we use the following metrics in Table B.3 such as RV coefficient (Robert and Escoufier 1976) and 4 Euclidean distance based norms (Frobenius, Log-Euclidean, Root Euclidean, Riemanian, Dryden et al. (2009)) as defined in Table B.3. These metrics are used to quantify the similarity between true and estimated covariance (co-expression) matrices. RV values close to \\(1\\) (\\(0\\)) implying higher (lower) level of similarity. For rest of the norms on Table B.3, values closer to \\(0\\) indicates higher level of similarity between true and estimated matrices. Name \\[ \\text{Notation} \\] \\[ \\text{Form} \\] RV \\[ \\text{RV}(S_{1},S_{2}) \\] \\[\\frac{ tr( S_{1}^{T} S_{2} ) }{ \\sqrt{ tr( S_{1}^{T} S_{1} ) tr( S_{2}^{T} S_{2} ) } } \\] Euclidean (Frobenius) \\[ d_{E}(S_{1},S_{2}) \\] \\[\\mid \\mid S_{1} - S_{2} \\mid \\mid \\] Log-Euclidean \\[d_{L}(S_{1},S_{2})\\] \\[\\mid \\mid \\log(S_{1}) - \\log(S_{2}) \\mid \\mid \\] Root-Euclidean \\[d_{H}(S_{1},S_{2})\\] \\[\\mid \\mid S_{1}^{1/2} - S_{2}^{1/2} \\mid \\mid \\] Riemanian \\[d_{R}(S_{1},S_{2})\\] \\[\\mid \\mid S_{1}^{-1/2} S_{2} S_{1}^{-1/2} \\mid \\mid \\] Table B.3: Definition of different norms. Here \\(\\mid \\mid X \\mid \\mid = \\sqrt{\\text{trace}(X^{T}X)}\\). B.2.1 Comparative analysis with different norm measures Figure B.2 represents the boxplot of distances between true \\((\\Sigma_{True})\\) and estimated \\((\\Sigma_{Est})\\) covariance matrices where the distances are measured in Euclidean, root Euclidean, log Euclidean and Riemanian norms respectively. In all the norms we observe that spatial settings are performing better in terms of estimation than the no-spatial settings. Among the spatial settings the estimation accuracy increase with an increment in induced spatial correlation. Figure B.2: Comparison of different methods based on several norms for estimation of gene co-expression in simulation study while the data is generated from a spatially correlated setting. Boxplot of Euclidean, log-Euclidean, root-Euclidean, Riemannian distance (Figure A, B, C and D respectively) across \\(50\\) replicates for \\(\\Sigma_{\\Phi} = \\Phi \\Phi^{T}\\) and \\(\\Sigma_{l}\\) \\((l = 1, \\dots , L)\\). We compare the norm distances for different settings for data generation with spatial correlation. B.2.2 Estimation of latent factors We follow same procedure from section 3.3 of De Vito et al. (2021) to estimate shared and cluster specific number of factors i.e. \\(K\\) and \\(K_{c}\\) \\((c=1,2, \\dots C)\\). Figure B.3 shows shared and cluster specfic estimated factor loadings accross \\(50\\) replicates for \\(5\\) different methods. Figure B.4 shows the median estimate of shared and cluster specfic factor loadings for \\(5\\) different methods. From both figures one can observe that spatial settings are estimating the loadings more precisely than the non-spatial settings. Figure B.3: Estimated dimension of factor loadings for shared and cluster specific cases accross \\(50\\) replicates. Black solid line denotes the true dimensions. Figure B.4: Estimated Factor loadings with credible intervals. B.3 Data generation with no spatial correlation Simulation design: We consider the same simulation design, comparative models and metrics for comparison. Now, we generate the from \\(\\text NS_{\\text P}\\) model where we do not consider any spatial correlation. We model the spatial parameter with a multi-variate normal distribution with mean \\(0\\) and identity as covariance matrix. We generate the data with no spatial correlation model \\(\\text NS_{\\text P}\\) and fit all the comparative models as mentioned in Table B.2. We summarize our results based on \\(50\\) replicated simulation study w.r.t co-expression estimation and network recovery. Co-expression estimation: We display the boxplot of RV coefficients for shared (\\(\\bf G_{s}\\)) and cluster-specific (\\(\\bf G_{c}\\), \\(c=1, \\dots, C\\)) covariance matrices in Figure B.5A across 3 comparative models in Table B.2. Based on RV coefficients, the highest level of precision in estimation is obtained for the non-spatial setting in (IV) i.e. \\(\\text NS_{\\text P}\\). For spatial settings, we do not observe a significant loss in estimation accuracy. For example, we only loose 1.3% accuracy in estimation for spatial settings with the SpaceX method in case of the shared network. A similar inference can be drawn based on different norm measures (Euclidean, log-Euclidean, root-Euclidean, Riemannian as defined in Table B.3 as provided in Figure B.6 (in clock-wise manner). Network recovery: AUC based comparisons for shared and cluster specific networks are shown in Figure B.5B. The Figure leads us to infer that no significant reduction in network recovery while comparing the spatial and non-spatial settings while data is generated without spatial correlation. In summary, we do not observe a significant loss in precision while applying the SpaceX model to the simulated data without any spatial correlation. Figure B.5: Accuracy comparison of different methodological settings in estimation and recovery of gene co-expression networks in simulation study while the data is generated without any spatial correlation. A) The RV coefficient measures the distance between the true and estimated networks. In the left panel, we have boxplot of RV coefficients across \\(50\\) replicates for shared and cluster-specific networks. We compare the RV coefficients for 3 different methods (I) SpaceX, (IV) \\(\\text NS_{\\text P}\\) (\\(\\rho = 0\\)) and (V) \\(\\text NS_{\\text G}\\) (the PMM and spatial informations are not taken under consideration). B) In the right panel, we use AUC metric as a measure of network recovery. The Figure represents ROC curves with color-coded AUC values of networks for different settings except for \\(\\text NS_{\\text G}\\) method. Figure B.6: Comparison of different methods based on several norms for estimation of gene co-expression in simulation study while the data is generated without any spatial correlation. Boxplot of Euclidean, log-Euclidean, root-Euclidean, Riemannian distances (Figure A, B, C and D respectively) across \\(50\\) replicates for \\(\\Sigma_{\\Phi} = \\Phi \\Phi^{T}\\) and \\(\\Sigma_{l}\\) \\((l = 1, \\dots , L)\\). We provide the definitions of all the norms in Table B.3 and compare the distances for different methodological settings. B.4 Hub gene detection based simulation Given the lack of ground truth for real data, we used a simulation study mimicking the real data structure, to evaluate the accuracy of the SpaceX method to recover true hub genes. To this end, we generate the data consisting of \\(160\\) genes and \\(5000\\) locations with \\(7\\) clusters; additional design parameters and details about the simulation settings are provided in Section 3 of the paper. Next, we apply our SpaceX model to the simulated data to estimate the hub genes for each of the \\(7\\) spatial clusters. We classify the hub gene into two categories: one with more than 40% connectivity (named “High”) and another with less than 40% connectivity (named “Low”). We choose this cut-off based on degree connectivity we found in the real data example (Section 4). Table B.4 shows the percentage of hub gene recovered for each cluster by setting \\(3\\) different values of the spatial correlation parameter: \\(\\rho = 0.2, 0.15\\) and \\(0.1\\) corresponding to low, medium and high levels of spatial correlation. The denominator of recovery rate is the total number of hub genes calculated from the true simulation settings whereas the numerator denotes the estimated number of hub genes obtained from the SpaceX method. From Table B.4, we observe that the percentage hub gene recovery increases with an increase as the level of spatial correlations increase \\(\\rho\\) and size of the cluster. For example, cluster 5 (size = 1700) has the following recovery rates 97.5% , 95.2%, 92.3% for highly connected hub genes corresponding to different level of spatial correlations i.e. \\(\\rho = 0.2,0.15\\) and \\(0.1\\) respectively. The recovery rates are 97.5%, 93.2%, 90.3% for cluster 5, 4 and 1 respectively with different cluster sizes (\\(N_{5}=1700\\), \\(N_{4}=1000\\), \\(N_{1}=700\\)). As expected, the recovery rate of the hub genes with higher connectivity is more than in the ones with low connectivity. References "],["realdata.html", "C Real Data Analysis C.1 Exploratory analysis of the datasets C.2 Community detection C.3 Benchmarking on real spatial transcriptomics data C.4 List of hub genes and edges C.5 Corroboration with TCGA Breast Cancer Data C.6 Network similarity between cell-type specific networks", " C Real Data Analysis We applied the SpaceX method on two spatial transcriptomics datasets which are obtained from the preoptic region of the mouse hypothalamus (Moffitt et al. 2018) and the human breast cancer dataset (Ståhl et al. 2016). Here we provide details of preprocessing and exploratory analysis of both datasets in section C.1. We illustrate the detailed application of the community detection algorithm on those two datasets in section C.2. C.1 Exploratory analysis of the datasets C.1.1 Merfish Data The MERFISH dataset is obtained from the preoptic area of the mouse hypothalamus (Moffitt et al. 2018). The dataset consists of \\(160\\) genes and corresponding gene expressions are measured in \\(4975\\) spatial locations. There are \\(7\\) pre-determined spatial clusters in the dataset named Astrocyte, Endothelial, Ependymal, Excitatory, Inhibitory, Immature, Mature, and the corresponding sizes are \\(724\\), \\(503\\), \\(314\\), \\(1024\\), \\(1694\\), \\(168\\), \\(385\\) respectively. The dataset consists of \\(2\\) more clusters named Microglia, Pericytes with cluster sizes \\(90\\), \\(73\\) respectively which are less than \\(100\\). Those two clusters are removed from the dataset. After removing those two clusters, we have gene expressions from \\(4812\\) locations corresponding to \\(160\\) genes. There are no genes with more than \\(95\\%\\) zeros reads. The left panel of Figure C.1 shows the violin plot of the percentage of zero reads among the genes for each cluster in the MERFISH dataset. The Umap representation of the Merfish data has been provided on the right panel of Figure C.1. Figure C.1: Left panel shows the violin plot of percentage of zero reads among the genes for each cluster w.r.t. Merfish data and the right panel shows the Umap. C.1.2 Breast Cancer Data The human breast cancer dataset contains expression levels from \\(5262\\) genes measured at \\(250\\) locations (Ståhl et al. 2016). We use the SPARK method with \\(5\\%\\) FDR cut-off on p-values to detect \\(290\\) spatially expressed genes to carry forward our analysis. The violin plot of the percentage of zero reads among the genes for each spatially contiguous cluster in the Breast cancer dataset is shown in the left panel of Figure C.2. On the right panel of Figure C.2, we have provided the Umap. Figure C.2: On the left panel, we have violin plot of percentage of zero reads among the genes for each cluster w.r.t. Breast Cancer data and the Umap is shown on the right panel. C.2 Community detection The community detection is a downstream analysis of the shared and cluster-specific networks which are obtained from the SpaceX method. The communities are detected by optimizing modularity over partitions in a network structure (Brandes et al. 2007). Figure C.3 and C.4 show the detected community modules from shared and cluster-specific co-expression networks for MERFISH and breast cancer data respectively. Figure C.3: Shared and cell-type specific community detection for Merfish data Figure C.4: Shared and cell-type specific community detection for Breast cancer data C.3 Benchmarking on real spatial transcriptomics data In this section, we benchmark our models on two real spatial transcriptomics datasets based on model fitting criteria. To this end, we use information-based criteria – a standard and well-established technique to compare the model fits between hierarchical Bayesian models (Gelman, Hwang, and Vehtari 2014). In this case, we use two information criteria-based metrics to assess our model fitting: (i) Bayesian analogue of AIC (Akaike 1998), defined as the Bayesian information criteria (BIC, Watanabe (2013)); and (ii) Watanabe-Akaike information criterion (WAIC) (Watanabe 2010), an improvement on the AIC and a fully Bayesian approach to measure model accuracy computed with log pointwise posterior predictive density and then adding a correction for the effective number of parameters to adjust for over-fitting. These criterion based methods are often used for model selection and specifically for spatial datasets (Banerjee, Wall, and Carlin 2003; Banerjee, Gelfand, and Polasek 2000; Lee and Ghosh 2009). In both cases, lower (relative) values indicate better model fits. Table C.1 shows the BIC and WAIC values for the SpaceX and non-spatial Poisson model for both the mouse hypothalamus and breast cancer data. Based on the criteria based values from the Table C.1, we can conclude that the SpaceX model is a better fit to both spatial transcriptomics datasets than the non-spatial Poisson model. For example, there is 64.7% and 46.6% of relative gain in accuracy of model fitting of the SpaceX model and non-spatial model w.r.t. BIC and WAIC respectively in case of Merfish data. A similar inference can be drawn for the breast cancer data where the relative gains are 66.4% and 45.5% for BIC and WAIC respectively in case of model fitting. BIC (Merfish) WAIC (Merfish) BIC (Breast cancer) WAIC (Breast cancer) SpaceX Model 13520 43783 24346 54179 Non-spatial Poisson model 38274 82045 72523 99474 Table C.1: Criteria based values for application of the SpaceX and non-spatial Poisson model to spatial transcriptomics data i.e. mouse hypothalamus and Breast cancer data. C.4 List of hub genes and edges A detailed list of hub genes and top edges for both the datasets can be found at https://github.com/SatwikAch/SpaceX. C.5 Corroboration with TCGA Breast Cancer Data To corroborate some of our findings, we consider the TCGA-based gene expression from 67 breast cancer tissues and 20,000 genes using parallel high-throughput sequencing (Wirth et al. 2011; Weinstein et al. 2013). To make a fair “apples-to-apples” comparison, we used the same intersecting gene set from the spatial transcriptomics based breast cancer data used in our paper . We used a network-based algorithm: personalized cancer-specific integrated network estimation (PRECISE, Ha et al. (2018)) to obtain gene networks. PRECISE is Bayesian method for gene-network reconstruction for bulk-sequencing data that uses a regression-based approach. The PRECISE method detected \\(77\\) hub genes out of total \\(290\\) genes compared to the SpaceX method, which detected \\(59\\) hub genes – with \\(19\\) intersecting hub genes using both methods. The list of all the hub genes detected from each method and intersection hub genes from both method can be found at the webiste mentioned below under the name BC_Hub_genes_TCGA.csv (https://github.com/SatwikAch/SpaceX/tree/main/Hub%20genes). Interestingly, multiple collagens genes (COL16A1, COL6A2, COL5A1) are detected as hub genes by both methods. Collagen biosynthesis can be regulated by cancer cells through mutated genes, transcription factors and signaling pathways (Xu et al. 2019). Understanding of the structural properties and functions of collagen in cancer will lead to anticancer therapy. The LUM gene is associated with collagen genes and effectively regulates estrogen receptors and function properties of breast cancer cells (Karamanou et al. 2017). Upregulation in FN1 gene indicates development various types of tumors (Y. Sun et al. 2020). XBP1 can induce cell invasion and metastasis in breast cancer cells by promoting high expression (S. Chen et al. 2020). VIM gene is used as a biomarker for the early detection of cancer (Mohebi et al. 2020). C.6 Network similarity between cell-type specific networks We further evaluated the performance of SpaceX to detect similarity between cell-cell interactions. To this end, we used Hamming distance, a well-established similarity measure between two networks, which has been used in several network topology based research studies (Tian and Shen 2005, 2006; Ehounou et al. 2020). In our case, the Hamming distance is equivalent to the distance between their two co-expression networks, i.e., the number of elements having a similar (or different) values in each of the two networks. A low (high) value in Hamming distance between two networks implies those two networks are more (less) similar to each other. The mouse hypothalamus data consists of 7 cell-type based clusters among 4812 spatial locations. The SpaceX method provides gene co-expression networks specifically for each cell types. Using the Hamming distance as similarity metric, we measure the network similarity between cell-type specific networks obtained from the Mouse hypthalamaous data analyses in Section 4.1 of the paper. The heatmap of the Hamming distances between cell-type specific networks is shown in Figure C.5. We can observe that the co-expression network of immature cell-type is further apart than other cell type specific network in terms of Hamming distance. We rescale the Hamming distance with maximum value such that the distances are in [0,1] interval. Specifically, the Hamming distances of immature cell type network with other cell type (Endothelial, Astrocyte, Mature, Inhibitory, Excitatory, Ependymal) networks are 1, 0.73, 0.83, 0.79, 0.82, 0.73 respectively. Based on Figure C.5, network of endothelial cell type is distant from other cell-type based networks except for the immature cell-type. The distance of Astrocyte cell-type netwrok from Ependymal and Excitatory are 0.27 and 0.32 respectively. The neuronal cell type specific networks have lower distance than others which leads to infer a higher level of similarity between cell-type based networks than others. This similarity and disparity based finding aligns with multiple prior works which discuss about hypothalamic cell diversity (R. Chen et al. 2017; Mickelsen et al. 2020). Figure C.5: The Figure shows heatmap of Hamming distances between cell-type specific networks. References "],["ImplementSpaceX.html", "D Implementation of SpaceX D.1 Installation D.2 Data inputs D.3 Output D.4 Example", " D Implementation of SpaceX SpaceX function extimates shared and cluster specfic gene co-expression networks for spatial transcriptomics data. More details about the SpaceX method can be found in the main manuscript. See below for detailed discussion on installation of SpaceX package, Data inputs and outputs followed by an example. D.1 Installation This package requires a Fortran compiler in order to work. Here are the instructions: Windows: install the Rtools package that is appropriate for your version of R Mac: Go to this website and follow the instructions: (https://mac.R-project.org/tools/) Linux: From a terminal, do the following: sudo apt install gcc. That will bring in multiple compilers. The package requires a dependency that is not available on CRAN. Install it with: remotes::install_github(&quot;rdevito/MSFA&quot;) You can install the released version of SpaceX from (https://github.com/SatwikAch/SpaceX) with: devtools::install_github(&quot;SatwikAch/SpaceX&quot;) library(SpaceX) D.2 Data inputs Please make sure to provide both inputs as dataframe. The first input is Gene_expression_mat which is \\(N \\times G\\) dataframe. Here \\(N\\) denotes the number of spatial locations and \\(G\\) denotes number of genes. The second input is Spatial_locations is a dataframe which contains spatial coordinates. The third input is Cluster_annotations. The fourth input is sPMM. If TRUE, the code will return the estimates of sigma1_sq and sigma2_sq from the spatial Poisson mixed model. The fifth input is Post_process. If FALSE, the code will return the posterior samples of \\(\\Phi\\) and \\(\\Psi^c\\) (based on definition in equation 1 of the SpaceX paper) only. Default is TRUE and the code will return all the posterior samples, shared and cluster specific co-expressions. The final input is numCore. The number of requested cores for parallel computing and default is set to be 1. D.3 Output You will obtain a list of objects as output. Posterior_samples contains all the posterior samples. Shared_network provides the shared co-expression matrix (transformed correlation matrix of \\(G_{s} = \\Phi \\Phi^{T}\\)). Cluster_network provides the cluster specific co-expression matrices (transformed correlation matrices of \\(G_{c} = \\Phi \\Phi^{T} + \\Psi^{c} {\\Psi^{c^{T}}}\\)). D.4 Example Here we provide an example to run the SpaceX method. # Reading the Breast cancer data # Spatial locations head(BC_loc) # Gene expression for data head(BC_count) # Data processing G &lt;-dim(BC_count)[2] # number of genes N &lt;-dim(BC_count)[1] # number of locations Next, we’ll apply the SpaceX method on the Breast cancer dataset. # Application to SpaceX method BC_fit &lt;- SpaceX(BC_count,BC_loc[,1:2],BC_loc[,3],sPMM=FALSE,Post_process = TRUE, numCore=2) # Shared_network :: Shared co-expression matrix # Cluster_network :: Cluster specific co-expression matrices "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
